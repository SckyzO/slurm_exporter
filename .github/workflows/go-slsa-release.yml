name: SLSA Go releaser

on:
  push:
    tags:
      - '[0-9]+.*'  # Trigger on version tags like 0.20, 1.0, etc.
    branches:
      - master
      - dev          # Also build on master and dev branches
  workflow_dispatch:  # Allow manual triggering

permissions:
  contents: write
  id-token: write
  actions: read

jobs:
  build:
    permissions:
      id-token: write  # Required for signing and SLSA provenance.
      contents: write  # Needed for uploading release assets.
    name: SLSA GoReleaser Build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goarch: [amd64, 386, arm64]  # Multi-architecture builds
    steps:
      # Step 1: Check out the source code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: 1.22.2

      # Step 3: Build using SLSA generator for Go
      - name: Build using SLSA
        uses: slsa-framework/slsa-github-generator/.github/workflows/builder_go_slsa3.yml@v1.10.0
        with:
          go-version: 1.22.2
          # We define architectures directly in the matrix
          goarch: ${{ matrix.goarch }}

      # Step 4: Upload the artifact to the release if on a tag
      - name: Upload binary to GitHub
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.MY_RELEASE_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: "binary-${{ matrix.goarch }}"
          asset_name: "slurm_exporter-${{ github.ref_name }}-linux-${{ matrix.goarch }}"
          asset_content_type: application/octet-stream
