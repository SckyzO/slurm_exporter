name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
      - name: golangci-lint
        uses: golangci/golangci-lint-action@v6
        with:
          version: v1.59

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
      - run: make test

  release:
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    permissions:
      contents: write # needed to write releases
      id-token: write # needed for keyless signing
      packages: write # needed for ghcr access
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: '1.22'
          cache: true
      - name: Set build environment variables
        run: |
          echo "BUILD_DATE=$(date +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV
          echo "GO_VERSION=$(go version)" >> $GITHUB_ENV
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: '~> v2'
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          BUILD_USER: "${{ github.actor }}"
          BUILD_DATE: ${{ env.BUILD_DATE }}
          GO_VERSION: ${{ env.GO_VERSION }}
          BRANCH_NAME: ${{ github.ref_name }}
          REVISION: ${{ github.sha }}

  slsa-goreleaser:
    needs: release
    permissions:
      id-token: write # To sign the provenance.
      contents: write # To add assets to a release.
    uses: slsa-framework/slsa-github-generator/.github/workflows/generator_goreleaser_slsa3.yml@v2.0.0
    with:
      goreleaser-config: .goreleaser.yaml
      # We can't use ${{ needs.release.outputs.artifacts }} because it's empty on skipped jobs
      # (e.g. when running on a pull request).
      # So we list the artifacts manually.
      #
      # Having the runner OS and architecture in the artifact name is a
      # requirement of the slsa-github-generator.
      #
      # You can get the list of artifacts from the GoReleaser output,
      # or from the summary of a successful release run.
      assets: |
        slurm_exporter_linux_amd64.tar.gz
        slurm_exporter_linux_arm64.tar.gz
        slurm_exporter_linux_386.tar.gz
        slurm_exporter_darwin_amd64.tar.gz
        slurm_exporter_darwin_arm64.tar.gz
        slurm_exporter_windows_amd64.zip
        slurm_exporter_windows_arm64.zip
        slurm_exporter_windows_386.zip
      # The GoReleaser-generated checksum file.
      # This is a hard requirement of the slsa-github-generator.
      checksum-file-name: 'slurm_exporter_checksums.txt'
      # The tag of the release.
      tag: ${{ github.ref_name }}